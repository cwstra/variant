"use strict";(self.webpackChunkvariant_site=self.webpackChunkvariant_site||[]).push([[80],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return s}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),c=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=c(n),s=r,k=m["".concat(p,".").concat(s)]||m[s]||d[s]||i;return n?a.createElement(k,l(l({ref:t},u),{},{components:n})):a.createElement(k,l({ref:t},u))}));function s(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1016:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return u},default:function(){return m}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),l=["components"],o={title:"Changelog"},p=void 0,c={unversionedId:"changelog",id:"changelog",isDocsHomePage:!1,title:"Changelog",description:"Summary of the changes in each patch.",source:"@site/docs/changelog.md",sourceDirName:".",slug:"/changelog",permalink:"/variant/docs/next/changelog",tags:[],version:"current",frontMatter:{title:"Changelog"},sidebar:"someSidebar",previous:{title:"Elevator Pitch",permalink:"/variant/docs/next/articles/pitch"},next:{title:"rx/js - Observables",permalink:"/variant/docs/next/libraries/rxjs"}},u=[{value:"2.0.3",id:"203",children:[],level:2},{value:"2.0.2",id:"202",children:[],level:2},{value:"2.0.1",id:"201",children:[],level:2},{value:"2.0",id:"20",children:[],level:2}],d={toc:u};function m(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Summary of the changes in each patch."),(0,i.kt)("h1",{id:"300"},"3.0.0"),(0,i.kt)("p",null,"Variant 3.0 has a separate article to discuss changes, ",(0,i.kt)("a",{parentName:"p",href:"new-in-3.0"},"What's new in Variant 3.0"),"."),(0,i.kt)("h2",{id:"203"},"2.0.3"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"added ",(0,i.kt)("inlineCode",{parentName:"li"},"remote()")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"sequence()"),"."),(0,i.kt)("li",{parentName:"ul"},"Improved handling of primitives in conditional types"),(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("inlineCode",{parentName:"li"},"types()")," function to replace ",(0,i.kt)("inlineCode",{parentName:"li"},"outputTypes()")," and extend its functionality."),(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("inlineCode",{parentName:"li"},"matcher()")," function"),(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("inlineCode",{parentName:"li"},"constrained()"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"patterned()"),", and ",(0,i.kt)("inlineCode",{parentName:"li"},"augmented()"),"."),(0,i.kt)("li",{parentName:"ul"},"Added match helpers ",(0,i.kt)("inlineCode",{parentName:"li"},"just()")," (alias for ",(0,i.kt)("inlineCode",{parentName:"li"},"constant()"),") and ",(0,i.kt)("inlineCode",{parentName:"li"},"unpack()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"outputTypes()")," gets a more specific return type.")),(0,i.kt)("h2",{id:"202"},"2.0.2"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("inlineCode",{parentName:"li"},"isType")," utility",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"and a curried overload"))),(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"match")," function has some new overloads",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"default functionality"),(0,i.kt)("li",{parentName:"ul"},"type-safe 'else' handling"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"match")," is now stricter, extraneous keys will raise a compiler error"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"partialMatch")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"matchElse")," will soon be deprecated and removed in ",(0,i.kt)("inlineCode",{parentName:"li"},"3.0"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"their functionality is now covered by ",(0,i.kt)("inlineCode",{parentName:"li"},"match")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"variantModule")," also accepts ",(0,i.kt)("inlineCode",{parentName:"li"},"{}")),(0,i.kt)("li",{parentName:"ul"},"improved generic handling (",(0,i.kt)("inlineCode",{parentName:"li"},"genericVariant"),")"),(0,i.kt)("li",{parentName:"ul"},"Acknowledgments",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Thank you ",(0,i.kt)("a",{parentName:"em",href:"https://github.com/paarthenon/variant/issues/7"},"@ohana54")," for the discussion that led to ",(0,i.kt)("inlineCode",{parentName:"em"},"isType")," and the ",(0,i.kt)("inlineCode",{parentName:"em"},"match")," overloads."))))),(0,i.kt)("h2",{id:"201"},"2.0.1"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"exposed ",(0,i.kt)("inlineCode",{parentName:"li"},"variantModule"))),(0,i.kt)("h2",{id:"20"},"2.0"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"first overhaul of library"),(0,i.kt)("li",{parentName:"ul"},"added recursive and generic variants"),(0,i.kt)("li",{parentName:"ul"},"added ",(0,i.kt)("inlineCode",{parentName:"li"},"variantModule")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"variantList")," now accepts raw string literals"),(0,i.kt)("li",{parentName:"ul"},"match gets a helper, ",(0,i.kt)("inlineCode",{parentName:"li"},"constant()"))))}m.isMDXComponent=!0}}]);