(self.webpackChunkvariant_site=self.webpackChunkvariant_site||[]).push([[8354],{3905:function(e,a,t){"use strict";t.d(a,{Zo:function(){return m},kt:function(){return F}});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function s(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?s(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=n.createContext({}),i=function(e){var a=n.useContext(p),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},m=function(e){var a=i(e.components);return n.createElement(p.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},c=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,s=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=i(t),F=r,k=c["".concat(p,".").concat(F)]||c[F]||d[F]||s;return t?n.createElement(k,l(l({ref:a},m),{},{components:t})):n.createElement(k,l({ref:a},m))}));function F(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var s=t.length,l=new Array(s);l[0]=c;var o={};for(var p in a)hasOwnProperty.call(a,p)&&(o[p]=a[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var i=2;i<s;i++)l[i]=t[i];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}c.displayName="MDXCreateElement"},4808:function(e,a,t){"use strict";t.r(a),t.d(a,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return i},toc:function(){return m},default:function(){return c}});var n=t(2122),r=t(9756),s=(t(7294),t(3905)),l=["components"],o={title:"Match"},p=void 0,i={unversionedId:"book/match",id:"book/match",isDocsHomePage:!1,title:"Match",description:"`twoslash include animal",source:"@site/docs/book/match.md",sourceDirName:"book",slug:"/book/match",permalink:"/variant/docs/next/book/match",version:"current",frontMatter:{title:"Match"},sidebar:"someSidebar",previous:{title:"Organization",permalink:"/variant/docs/next/book/organization"},next:{title:"Matcher (builder pattern)",permalink:"/variant/docs/next/book/matcher"}},m=[{value:"Matching Literals",id:"matching-literals",children:[]},{value:"Partial matching",id:"partial-matching",children:[{value:"Better typed partial matching",id:"better-typed-partial-matching",children:[]}]},{value:"Inline matching",id:"inline-matching",children:[]},{value:"Unpack",id:"unpack",children:[]},{value:"Returning a constant",id:"returning-a-constant",children:[]},{value:"Matching scoped variants.",id:"matching-scoped-variants",children:[]},{value:"Prematching",id:"prematching",children:[]}],d={toc:m};function c(e){var a=e.components,t=(0,r.Z)(e,l);return(0,s.kt)("wrapper",(0,n.Z)({},d,t,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("div",{className:"shiki-twoslash-fragment"}),(0,s.kt)("p",null,"Pattern matching is the crown jewel of variant types. Like the traditional switch statement, a match expression can process some arbitrary variant with special handling based on its type at runtime. Unlike a switch statement, matches are expressions and they are ",(0,s.kt)("strong",{parentName:"p"},"exhaustive")," by default. As expressions, matches can be used inline as the results of expression-bodied lambdas, JSX attributes, and more. As exhaustive handlers, matches can be assumed to resolve. "),(0,s.kt)("p",null,"The most direct use of the match expression requires an instance and a handler object."),(0,s.kt)("div",{className:"shiki-twoslash-fragment"},(0,s.kt)("pre",{parentName:"div",className:"shiki comrade-contrast",style:{backgroundColor:"rgb(26, 32, 32)",color:"#d6dbdb"}},(0,s.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,s.kt)("div",{parentName:"pre",className:"code-container"},(0,s.kt)("code",{parentName:"div"},(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"result"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"match"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"instance"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", {")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    "),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"typeOne"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},": "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"_"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"_"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},".")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"})"))))),(0,s.kt)("pre",{parentName:"div",className:"shiki Monotone-red-color-theme",style:{backgroundColor:"#000000",color:"#ffffff"}},(0,s.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,s.kt)("div",{parentName:"pre",className:"code-container"},(0,s.kt)("code",{parentName:"div"},(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},"result"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," match"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},"instance"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", {")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    typeOne: "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},"_"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},"_"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},".")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"}"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")")))))),(0,s.kt)("h2",{id:"matching-literals"},"Matching Literals"),(0,s.kt)("p",null,"Match can be used on ",(0,s.kt)("em",{parentName:"p"},"any")," valid string literal union. These can be generated simply with ",(0,s.kt)("inlineCode",{parentName:"p"},"catalog()")," or may come from other libraries. For example, ",(0,s.kt)("strong",{parentName:"p"},"Chakra-UI")," provides a hook ",(0,s.kt)("inlineCode",{parentName:"p"},"useColorMode"),"."),(0,s.kt)("div",{className:"shiki-twoslash-fragment"},(0,s.kt)("pre",{parentName:"div",className:"shiki comrade-contrast",style:{backgroundColor:"rgb(26, 32, 32)",color:"#d6dbdb"}},(0,s.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,s.kt)("div",{parentName:"pre",className:"code-container"},(0,s.kt)("code",{parentName:"div"},(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," {"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"colorMode"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"} "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"useColorMode"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"();"))))),(0,s.kt)("pre",{parentName:"div",className:"shiki Monotone-red-color-theme",style:{backgroundColor:"#000000",color:"#ffffff"}},(0,s.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,s.kt)("div",{parentName:"pre",className:"code-container"},(0,s.kt)("code",{parentName:"div"},(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"{"),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},"colorMode"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"}"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," useColorMode"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"()"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")))))),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"colorMode")," variable is a string ",(0,s.kt)("inlineCode",{parentName:"p"},"'dark' | 'light'"),". As such, it can be processed with match."),(0,s.kt)("div",{className:"shiki-twoslash-fragment"},(0,s.kt)("pre",{parentName:"div",className:"shiki comrade-contrast",style:{backgroundColor:"rgb(26, 32, 32)",color:"#d6dbdb"}},(0,s.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,s.kt)("div",{parentName:"pre",className:"code-container"},(0,s.kt)("code",{parentName:"div"},(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"result"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"match"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"onLiteral"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"colorMode"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"), {")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    "),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"dark"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},": "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"_"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"..."),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    "),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"light"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},": "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"_"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"..."),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"});"))))),(0,s.kt)("pre",{parentName:"div",className:"shiki Monotone-red-color-theme",style:{backgroundColor:"#000000",color:"#ffffff"}},(0,s.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,s.kt)("div",{parentName:"pre",className:"code-container"},(0,s.kt)("code",{parentName:"div"},(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},"result"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," match"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"onLiteral"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},"colorMode"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", {")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    dark: "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},"_"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"..."),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    light: "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},"_"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"..."),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"}"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")))))),(0,s.kt)("hr",null),(0,s.kt)("h2",{id:"partial-matching"},"Partial matching"),(0,s.kt)("p",null,"Use the ",(0,s.kt)("inlineCode",{parentName:"p"},"default")," keyword."),(0,s.kt)("div",{className:"shiki-twoslash-fragment"},(0,s.kt)("pre",{parentName:"div",className:"shiki comrade-contrast twoslash lsp",style:{backgroundColor:"rgb(26, 32, 32)",color:"#d6dbdb"}},(0,s.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,s.kt)("div",{parentName:"pre",className:"code-container"},(0,s.kt)("code",{parentName:"div"},(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"const hasFur: boolean"},"hasFur")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'Matchmaker I\'m desperate find me a partial match.\n\n(alias) match<{\n    type: "cat";\n    name: string;\n    furnitureDamaged: number;\n} | {\n    type: "dog";\n    name: string;\n    favoriteBall?: string | undefined;\n} | {\n    type: "snake";\n    name: string;\n    pattern: string;\n}, {\n    snake: (_: {\n        type: "snake";\n        name: string;\n        pattern: string;\n    }) => boolean;\n    default: (_: {\n        ...;\n    } | ... 1 more ... | {\n        ...;\n    }) => boolean;\n}>(object: {\n    ...;\n} | ... 1 more ... | {\n    ...;\n}, handler: {\n    ...;\n}): boolean (+4 overloads)\nimport match'},"match")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'var animal: {\n    type: "cat";\n    name: string;\n    furnitureDamaged: number;\n} | {\n    type: "dog";\n    name: string;\n    favoriteBall?: string | undefined;\n} | {\n    type: "snake";\n    name: string;\n    pattern: string;\n}'},"animal")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", {")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    "),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'(property) snake: (_: {\n    type: "snake";\n    name: string;\n    pattern: string;\n}) => boolean'},"snake")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},": "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'(parameter) _: {\n    type: "snake";\n    name: string;\n    pattern: string;\n}'},"_")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"false"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    "),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'(property) default: (_: {\n    type: "cat";\n    name: string;\n    furnitureDamaged: number;\n} | {\n    type: "dog";\n    name: string;\n    favoriteBall?: string | undefined;\n} | {\n    type: "snake";\n    name: string;\n    pattern: string;\n}) => boolean'},"default")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},": "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'(parameter) _: {\n    type: "cat";\n    name: string;\n    furnitureDamaged: number;\n} | {\n    type: "dog";\n    name: string;\n    favoriteBall?: string | undefined;\n} | {\n    type: "snake";\n    name: string;\n    pattern: string;\n}'},"_")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"true"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"});"))))),(0,s.kt)("pre",{parentName:"div",className:"shiki Monotone-red-color-theme twoslash lsp",style:{backgroundColor:"#000000",color:"#ffffff"}},(0,s.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,s.kt)("div",{parentName:"pre",className:"code-container"},(0,s.kt)("code",{parentName:"div"},(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"const hasFur: boolean"},"hasFur")),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," ",(0,s.kt)("data-lsp",{parentName:"span",lsp:'Matchmaker I\'m desperate find me a partial match.\n\n(alias) match<{\n    type: "cat";\n    name: string;\n    furnitureDamaged: number;\n} | {\n    type: "dog";\n    name: string;\n    favoriteBall?: string | undefined;\n} | {\n    type: "snake";\n    name: string;\n    pattern: string;\n}, {\n    snake: (_: {\n        type: "snake";\n        name: string;\n        pattern: string;\n    }) => boolean;\n    default: (_: {\n        ...;\n    } | ... 1 more ... | {\n        ...;\n    }) => boolean;\n}>(object: {\n    ...;\n} | ... 1 more ... | {\n    ...;\n}, handler: {\n    ...;\n}): boolean (+4 overloads)\nimport match'},"match")),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'var animal: {\n    type: "cat";\n    name: string;\n    furnitureDamaged: number;\n} | {\n    type: "dog";\n    name: string;\n    favoriteBall?: string | undefined;\n} | {\n    type: "snake";\n    name: string;\n    pattern: string;\n}'},"animal")),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", {")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    ",(0,s.kt)("data-lsp",{parentName:"span",lsp:'(property) snake: (_: {\n    type: "snake";\n    name: string;\n    pattern: string;\n}) => boolean'},"snake"),": "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'(parameter) _: {\n    type: "snake";\n    name: string;\n    pattern: string;\n}'},"_")),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"false"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    ",(0,s.kt)("data-lsp",{parentName:"span",lsp:'(property) default: (_: {\n    type: "cat";\n    name: string;\n    furnitureDamaged: number;\n} | {\n    type: "dog";\n    name: string;\n    favoriteBall?: string | undefined;\n} | {\n    type: "snake";\n    name: string;\n    pattern: string;\n}) => boolean'},"default"),": "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'(parameter) _: {\n    type: "cat";\n    name: string;\n    furnitureDamaged: number;\n} | {\n    type: "dog";\n    name: string;\n    favoriteBall?: string | undefined;\n} | {\n    type: "snake";\n    name: string;\n    pattern: string;\n}'},"_")),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"true"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"}"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")))))),(0,s.kt)("h3",{id:"better-typed-partial-matching"},"Better typed partial matching"),(0,s.kt)("p",null,"Use the overload ",(0,s.kt)("inlineCode",{parentName:"p"},"match(item, partialHandler, restHandler)"),". In this version of match, the input to the default clause will be better typed. Specifically, it will exclude the items that the handler has already resolved. Notice that in this code sample, snake is absent from the input type."),(0,s.kt)("div",{className:"shiki-twoslash-fragment"},(0,s.kt)("pre",{parentName:"div",className:"shiki comrade-contrast twoslash lsp",style:{backgroundColor:"rgb(26, 32, 32)",color:"#d6dbdb"}},(0,s.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,s.kt)("div",{parentName:"pre",className:"code-container"},(0,s.kt)("code",{parentName:"div"},(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"const hasFur: boolean"},"hasFur")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'Matchmaker I\'m very specific and I want to enumerate my remaining options.\n\n(alias) match<{\n    type: "cat";\n    name: string;\n    furnitureDamaged: number;\n} | {\n    type: "dog";\n    name: string;\n    favoriteBall?: string | undefined;\n} | {\n    type: "snake";\n    name: string;\n    pattern: string;\n}, {\n    snake: (_: {\n        type: "snake";\n        name: string;\n        pattern: string;\n    }) => boolean;\n}, (_: {\n    ...;\n} | {\n    ...;\n}) => boolean>(object: {\n    ...;\n} | ... 1 more ... | {\n    ...;\n}, handler: {\n    ...;\n}, elseFunc: (_: {\n    ...;\n} | {\n    ...;\n}) => boolean): boolean (+4 overloads)\nimport match'},"match")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'var animal: {\n    type: "cat";\n    name: string;\n    furnitureDamaged: number;\n} | {\n    type: "dog";\n    name: string;\n    favoriteBall?: string | undefined;\n} | {\n    type: "snake";\n    name: string;\n    pattern: string;\n}'},"animal")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", {"),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'(property) snake: (_: {\n    type: "snake";\n    name: string;\n    pattern: string;\n}) => boolean'},"snake")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},": "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'(parameter) _: {\n    type: "snake";\n    name: string;\n    pattern: string;\n}'},"_")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"false"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"}, "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'(parameter) _: {\n    type: "cat";\n    name: string;\n    furnitureDamaged: number;\n} | {\n    type: "dog";\n    name: string;\n    favoriteBall?: string | undefined;\n}',style:{borderBottom:"solid 2px lightgrey"}},"_")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"true"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},");")),(0,s.kt)("div",{parentName:"code",className:"meta-line"},(0,s.kt)("span",{parentName:"div",className:"popover-prefix"},"                                                 "),(0,s.kt)("span",{parentName:"div",className:"popover"},(0,s.kt)("div",{parentName:"span",className:"arrow"}),'(parameter) _: {\n    type: "cat";\n    name: string;\n    furnitureDamaged: number;\n} | {\n    type: "dog";\n    name: string;\n    favoriteBall?: string | undefined;\n}'))))),(0,s.kt)("pre",{parentName:"div",className:"shiki Monotone-red-color-theme twoslash lsp",style:{backgroundColor:"#000000",color:"#ffffff"}},(0,s.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,s.kt)("div",{parentName:"pre",className:"code-container"},(0,s.kt)("code",{parentName:"div"},(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"const hasFur: boolean"},"hasFur")),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," ",(0,s.kt)("data-lsp",{parentName:"span",lsp:'Matchmaker I\'m very specific and I want to enumerate my remaining options.\n\n(alias) match<{\n    type: "cat";\n    name: string;\n    furnitureDamaged: number;\n} | {\n    type: "dog";\n    name: string;\n    favoriteBall?: string | undefined;\n} | {\n    type: "snake";\n    name: string;\n    pattern: string;\n}, {\n    snake: (_: {\n        type: "snake";\n        name: string;\n        pattern: string;\n    }) => boolean;\n}, (_: {\n    ...;\n} | {\n    ...;\n}) => boolean>(object: {\n    ...;\n} | ... 1 more ... | {\n    ...;\n}, handler: {\n    ...;\n}, elseFunc: (_: {\n    ...;\n} | {\n    ...;\n}) => boolean): boolean (+4 overloads)\nimport match'},"match")),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'var animal: {\n    type: "cat";\n    name: string;\n    furnitureDamaged: number;\n} | {\n    type: "dog";\n    name: string;\n    favoriteBall?: string | undefined;\n} | {\n    type: "snake";\n    name: string;\n    pattern: string;\n}'},"animal")),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", {",(0,s.kt)("data-lsp",{parentName:"span",lsp:'(property) snake: (_: {\n    type: "snake";\n    name: string;\n    pattern: string;\n}) => boolean'},"snake"),": "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'(parameter) _: {\n    type: "snake";\n    name: string;\n    pattern: string;\n}'},"_")),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"false"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"}, "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'(parameter) _: {\n    type: "cat";\n    name: string;\n    furnitureDamaged: number;\n} | {\n    type: "dog";\n    name: string;\n    favoriteBall?: string | undefined;\n}',style:{borderBottom:"solid 2px lightgrey"}},"_")),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"true)"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")),(0,s.kt)("div",{parentName:"code",className:"meta-line"},(0,s.kt)("span",{parentName:"div",className:"popover-prefix"},"                                                 "),(0,s.kt)("span",{parentName:"div",className:"popover"},(0,s.kt)("div",{parentName:"span",className:"arrow"}),'(parameter) _: {\n    type: "cat";\n    name: string;\n    furnitureDamaged: number;\n} | {\n    type: "dog";\n    name: string;\n    favoriteBall?: string | undefined;\n}')))))),(0,s.kt)("h2",{id:"inline-matching"},"Inline matching"),(0,s.kt)("p",null,"There's a point-free syntax available for match, allowing it to be used as a higher order function when in a properly constrained context. If match can infer what it's required to handle, it can provide autocompletion and exhaustiveness checking for the remaining options."),(0,s.kt)("p",null,"One of the motivating instance was in processing a promise chain. "),(0,s.kt)("div",{className:"shiki-twoslash-fragment"},(0,s.kt)("pre",{parentName:"div",className:"shiki comrade-contrast twoslash lsp",style:{backgroundColor:"rgb(26, 32, 32)",color:"#d6dbdb"}},(0,s.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,s.kt)("div",{parentName:"pre",className:"code-container"},(0,s.kt)("code",{parentName:"div"},(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"declare"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"function"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"function getAnimal(): Promise<Animal>"},"getAnimal")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"()"),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},":"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," ",(0,s.kt)("data-lsp",{parentName:"span",lsp:"Represents the completion of an asynchronous operation\n\ninterface Promise<T>"},"Promise"),"<",(0,s.kt)("data-lsp",{parentName:"span",lsp:'type Animal<T extends TypeNames<{ cat: VariantCreator<"cat", (input: { name: string; furnitureDamaged: number; }) => { name: string; furnitureDamaged: number; }, "type">; dog: VariantCreator<"dog", (input: { name: string; favoriteBall?: string | undefined; }) => { ...; }, "type">; snake: VariantCreator<...>; }> = undefined> = T extends undefined ? {\n    type: "cat";\n    name: string;\n    furnitureDamaged: number;\n} | {\n    type: "dog";\n    name: string;\n    favoriteBall?: string | undefined;\n} | {\n    type: "snake";\n    name: string;\n    pattern: string;\n} : T extends TypesOf<...> ? Extract<...> | ... 1 more ... | Extract<...> : {\n    ...;\n} | ... 1 more ... | {\n    ...;\n}'},"Animal"),">;")),(0,s.kt)("div",{parentName:"code",className:"line"},"\xa0"),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"const message: Promise<string>"},"message")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"function getAnimal(): Promise<Animal>"},"getAnimal")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"()")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    ."),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'Attaches callbacks for the resolution and/or rejection of the Promise.\n\n(method) Promise<{ type: "cat"; name: string; furnitureDamaged: number; } | { type: "dog"; name: string; favoriteBall?: string | undefined; } | { type: "snake"; name: string; pattern: string; }>.then<string, never>(onfulfilled?: ((value: {\n    type: "cat";\n    name: string;\n    furnitureDamaged: number;\n} | {\n    type: "dog";\n    name: string;\n    favoriteBall?: string | undefined;\n} | {\n    type: "snake";\n    name: string;\n    pattern: string;\n}) => string | PromiseLike<string>) | null | undefined, onrejected?: ((reason: any) => PromiseLike<...>) | ... 1 more ... | undefined): Promise<...>'},"then")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'Curried overload - handler.\n\n(alias) match<{\n    type: "cat";\n    name: string;\n    furnitureDamaged: number;\n} | {\n    type: "dog";\n    name: string;\n    favoriteBall?: string | undefined;\n} | {\n    type: "snake";\n    name: string;\n    pattern: string;\n}, {\n    dog: (_: {\n        type: "dog";\n        name: string;\n        favoriteBall?: string | undefined;\n    }) => string;\n    cat: ({ furnitureDamaged }: {\n        ...;\n    }) => string;\n    snake: ({ name, pattern }: {\n        ...;\n    }) => string;\n}>(handler: {\n    ...;\n}): (instance: {\n    ...;\n} | ... 1 more ... | {\n    ...;\n}) => string (+4 overloads)\nimport match'},"match")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"({")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"        "),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'(property) dog: (_: {\n    type: "dog";\n    name: string;\n    favoriteBall?: string | undefined;\n}) => string'},"dog")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},": "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'(parameter) _: {\n    type: "dog";\n    name: string;\n    favoriteBall?: string | undefined;\n}'},"_")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"`Get a doggy bed`"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"        "),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'(property) cat: ({ furnitureDamaged }: {\n    type: "cat";\n    name: string;\n    furnitureDamaged: number;\n}) => string'},"cat")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},": ({"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"var furnitureDamaged: number"},"furnitureDamaged")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"}) "),(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," {")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"            "),(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'const really: " really" | ""'},"really")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"var furnitureDamaged: number"},"furnitureDamaged")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},">"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#4EADAD"}},"3")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"                "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"?"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"' really'")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"                "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},":"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"''")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"            ;")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"            "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"return"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"`You should"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"${"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'const really: " really" | ""'},"really")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"}"),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}}," buy a cat tree`"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},";")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"        },")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"        "),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'(property) snake: ({ name, pattern }: {\n    type: "snake";\n    name: string;\n    pattern: string;\n}) => string'},"snake")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},": ({"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"var name: string"},"name")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"var pattern: string"},"pattern")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"}) "),(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"`Buy a terrarium`"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    }));"))))),(0,s.kt)("pre",{parentName:"div",className:"shiki Monotone-red-color-theme twoslash lsp",style:{backgroundColor:"#000000",color:"#ffffff"}},(0,s.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,s.kt)("div",{parentName:"pre",className:"code-container"},(0,s.kt)("code",{parentName:"div"},(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"declare"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"function"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," ",(0,s.kt)("data-lsp",{parentName:"span",lsp:"function getAnimal(): Promise<Animal>"},"getAnimal")),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"()"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},":"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"Represents the completion of an asynchronous operation\n\ninterface Promise<T>"},"Promise"),"<",(0,s.kt)("data-lsp",{parentName:"span",lsp:'type Animal<T extends TypeNames<{ cat: VariantCreator<"cat", (input: { name: string; furnitureDamaged: number; }) => { name: string; furnitureDamaged: number; }, "type">; dog: VariantCreator<"dog", (input: { name: string; favoriteBall?: string | undefined; }) => { ...; }, "type">; snake: VariantCreator<...>; }> = undefined> = T extends undefined ? {\n    type: "cat";\n    name: string;\n    furnitureDamaged: number;\n} | {\n    type: "dog";\n    name: string;\n    favoriteBall?: string | undefined;\n} | {\n    type: "snake";\n    name: string;\n    pattern: string;\n} : T extends TypesOf<...> ? Extract<...> | ... 1 more ... | Extract<...> : {\n    ...;\n} | ... 1 more ... | {\n    ...;\n}'},"Animal"),">"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")),(0,s.kt)("div",{parentName:"code",className:"line"},"\xa0"),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"const message: Promise<string>"},"message")),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," ",(0,s.kt)("data-lsp",{parentName:"span",lsp:"function getAnimal(): Promise<Animal>"},"getAnimal")),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"()")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    .",(0,s.kt)("data-lsp",{parentName:"span",lsp:'Attaches callbacks for the resolution and/or rejection of the Promise.\n\n(method) Promise<{ type: "cat"; name: string; furnitureDamaged: number; } | { type: "dog"; name: string; favoriteBall?: string | undefined; } | { type: "snake"; name: string; pattern: string; }>.then<string, never>(onfulfilled?: ((value: {\n    type: "cat";\n    name: string;\n    furnitureDamaged: number;\n} | {\n    type: "dog";\n    name: string;\n    favoriteBall?: string | undefined;\n} | {\n    type: "snake";\n    name: string;\n    pattern: string;\n}) => string | PromiseLike<string>) | null | undefined, onrejected?: ((reason: any) => PromiseLike<...>) | ... 1 more ... | undefined): Promise<...>'},"then")),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'Curried overload - handler.\n\n(alias) match<{\n    type: "cat";\n    name: string;\n    furnitureDamaged: number;\n} | {\n    type: "dog";\n    name: string;\n    favoriteBall?: string | undefined;\n} | {\n    type: "snake";\n    name: string;\n    pattern: string;\n}, {\n    dog: (_: {\n        type: "dog";\n        name: string;\n        favoriteBall?: string | undefined;\n    }) => string;\n    cat: ({ furnitureDamaged }: {\n        ...;\n    }) => string;\n    snake: ({ name, pattern }: {\n        ...;\n    }) => string;\n}>(handler: {\n    ...;\n}): (instance: {\n    ...;\n} | ... 1 more ... | {\n    ...;\n}) => string (+4 overloads)\nimport match'},"match")),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"{")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"        ",(0,s.kt)("data-lsp",{parentName:"span",lsp:'(property) dog: (_: {\n    type: "dog";\n    name: string;\n    favoriteBall?: string | undefined;\n}) => string'},"dog"),": "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'(parameter) _: {\n    type: "dog";\n    name: string;\n    favoriteBall?: string | undefined;\n}'},"_")),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"`"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"Get a doggy bed"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"`"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"        ",(0,s.kt)("data-lsp",{parentName:"span",lsp:'(property) cat: ({ furnitureDamaged }: {\n    type: "cat";\n    name: string;\n    furnitureDamaged: number;\n}) => string'},"cat"),": "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"({"),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"var furnitureDamaged: number"},"furnitureDamaged")),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"})"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," {")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"            "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'const really: " really" | ""'},"really")),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"var furnitureDamaged: number"},"furnitureDamaged")),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},">"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"3")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"                "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"?"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}}," really"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"                "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},":"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"''")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"            ;")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"            "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"return"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"`"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"You should${"),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'const really: " really" | ""'},"really")),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"} buy a cat tree"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"`"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"        },")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"        ",(0,s.kt)("data-lsp",{parentName:"span",lsp:'(property) snake: ({ name, pattern }: {\n    type: "snake";\n    name: string;\n    pattern: string;\n}) => string'},"snake"),": "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"({"),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"var name: string"},"name")),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"var pattern: string"},"pattern")),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"})"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"`"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"Buy a terrarium"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"`"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    }"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"))"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")))))),(0,s.kt)("p",null,"But inline matching can also be used in situations like the array functions ",(0,s.kt)("inlineCode",{parentName:"p"},".filter"),", ",(0,s.kt)("inlineCode",{parentName:"p"},".some"),", and ",(0,s.kt)("inlineCode",{parentName:"p"},".map"),"."),(0,s.kt)("h2",{id:"unpack"},"Unpack"),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"payload()")," helper function is commonly used. Unpacking the payload from the variant results in typing ",(0,s.kt)("inlineCode",{parentName:"p"},"({payload}) => payload,")," many times. This lambda is available as ",(0,s.kt)("inlineCode",{parentName:"p"},"unpack"),"."),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"Code sample TBD.")),(0,s.kt)("h2",{id:"returning-a-constant"},"Returning a constant"),(0,s.kt)("p",null,"Use the functions ",(0,s.kt)("inlineCode",{parentName:"p"},"constant(value)")," or ",(0,s.kt)("inlineCode",{parentName:"p"},"just(value)")," as an alternative to ",(0,s.kt)("inlineCode",{parentName:"p"},"() => value"),"/",(0,s.kt)("inlineCode",{parentName:"p"},"_ => value"),"."),(0,s.kt)("div",{className:"shiki-twoslash-fragment"},(0,s.kt)("pre",{parentName:"div",className:"shiki comrade-contrast",style:{backgroundColor:"rgb(26, 32, 32)",color:"#d6dbdb"}},(0,s.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,s.kt)("div",{parentName:"pre",className:"code-container"},(0,s.kt)("code",{parentName:"div"},(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#506565"}},"// Code TBD.")),(0,s.kt)("div",{parentName:"code",className:"line"})))),(0,s.kt)("pre",{parentName:"div",className:"shiki Monotone-red-color-theme",style:{backgroundColor:"#000000",color:"#ffffff"}},(0,s.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,s.kt)("div",{parentName:"pre",className:"code-container"},(0,s.kt)("code",{parentName:"div"},(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"//"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," Code TBD.")),(0,s.kt)("div",{parentName:"code",className:"line"}))))),(0,s.kt)("h2",{id:"matching-scoped-variants"},"Matching scoped variants."),(0,s.kt)("p",null,"Use the ",(0,s.kt)("inlineCode",{parentName:"p"},"descope()")," function to remove the scope section, allowing the handler to work with the more friendly names."),(0,s.kt)("div",{className:"shiki-twoslash-fragment"},(0,s.kt)("pre",{parentName:"div",className:"shiki comrade-contrast",style:{backgroundColor:"rgb(26, 32, 32)",color:"#d6dbdb"}},(0,s.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,s.kt)("div",{parentName:"pre",className:"code-container"},(0,s.kt)("code",{parentName:"div"},(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#506565"}},"// code tbd."))))),(0,s.kt)("pre",{parentName:"div",className:"shiki Monotone-red-color-theme",style:{backgroundColor:"#000000",color:"#ffffff"}},(0,s.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,s.kt)("div",{parentName:"pre",className:"code-container"},(0,s.kt)("code",{parentName:"div"},(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"//"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," code tbd.")))))),(0,s.kt)("h2",{id:"prematching"},"Prematching"),(0,s.kt)("p",null,"Match on a type ahead of time. No variable instance necessary. "),(0,s.kt)("div",{className:"shiki-twoslash-fragment"},(0,s.kt)("pre",{parentName:"div",className:"shiki comrade-contrast",style:{backgroundColor:"rgb(26, 32, 32)",color:"#d6dbdb"}},(0,s.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,s.kt)("div",{parentName:"pre",className:"code-container"},(0,s.kt)("code",{parentName:"div"},(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"describeAnimal"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"prematch"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"Animal"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},")({")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    "),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"dog"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},": ({"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"name"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"favoriteBall"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"}) "),(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"`"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"${"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"name"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"}"),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}}," is playing with their "),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"${"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"favoriteBall"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"}"),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}}," ball`"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    "),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"cat"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},": ({"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"name"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"}) "),(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"`"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"${"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"name"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"}"),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}}," is resting on the windowsill`"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    "),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"snake"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},": ({"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"name"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"pattern"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"}) "),(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"`"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"${"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"name"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"}"),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}}," is warming his "),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"${"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"pattern"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"}"),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}}," skin against the light`"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"});")),(0,s.kt)("div",{parentName:"code",className:"line"}),(0,s.kt)("div",{parentName:"code",className:"line"}),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"cerberus"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"Animal"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"."),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"dog"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"({name: "),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"'Cerberus'"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", favoriteBall: "),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"'red'"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"});")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"description"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"describeAnimal"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"cerberus"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},");")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#506565"}},'// ^ "Cerberus is playing with their red ball"'))))),(0,s.kt)("pre",{parentName:"div",className:"shiki Monotone-red-color-theme",style:{backgroundColor:"#000000",color:"#ffffff"}},(0,s.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,s.kt)("div",{parentName:"pre",className:"code-container"},(0,s.kt)("code",{parentName:"div"},(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},"describeAnimal"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," prematch"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},"Animal"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")("),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"{")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    dog: "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"({"),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},"name"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},"favoriteBall"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"})"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"`"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"${"),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},"name"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"} is playing with their ${"),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},"favoriteBall"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"} ball"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"`"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    cat: "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"({"),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},"name"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"})"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"`"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"${"),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},"name"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"} is resting on the windowsill"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"`"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    snake: "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"({"),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},"name"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},"pattern"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"})"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"`"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"${"),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},"name"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"} is warming his ${"),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},"pattern"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"} skin against the light"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"`"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"}"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")),(0,s.kt)("div",{parentName:"code",className:"line"}),(0,s.kt)("div",{parentName:"code",className:"line"}),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},"cerberus"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},"Animal"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},".dog"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"{name: "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"Cerberus"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", favoriteBall: "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"red"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"}"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},"description"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," describeAnimal"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},"cerberus"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"//"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},' ^ "Cerberus is playing with their red ball"')))))),(0,s.kt)("p",null,"This can be accessed in two ways:"),(0,s.kt)("div",{className:"shiki-twoslash-fragment"},(0,s.kt)("pre",{parentName:"div",className:"shiki comrade-contrast",style:{backgroundColor:"rgb(26, 32, 32)",color:"#d6dbdb"}},(0,s.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,s.kt)("div",{parentName:"pre",className:"code-container"},(0,s.kt)("code",{parentName:"div"},(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"matchAnimal1"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"prematch"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"Animal"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},");")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"matchAnimal2"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"prematch"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"<Animal>();"))))),(0,s.kt)("pre",{parentName:"div",className:"shiki Monotone-red-color-theme",style:{backgroundColor:"#000000",color:"#ffffff"}},(0,s.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,s.kt)("div",{parentName:"pre",className:"code-container"},(0,s.kt)("code",{parentName:"div"},(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},"matchAnimal1"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," prematch"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},"Animal"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},"matchAnimal2"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," prematch"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"<"),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},"Animal"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},">()"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")))))),(0,s.kt)("hr",null),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"describe match"),(0,s.kt)("li",{parentName:"ul"},"describe partial functionality"),(0,s.kt)("li",{parentName:"ul"},"describe inline matcher"),(0,s.kt)("li",{parentName:"ul"},"describe matching on literals"),(0,s.kt)("li",{parentName:"ul"},"mention ",(0,s.kt)("inlineCode",{parentName:"li"},"unpack")),(0,s.kt)("li",{parentName:"ul"},"mention ",(0,s.kt)("inlineCode",{parentName:"li"},"constant"),"/",(0,s.kt)("inlineCode",{parentName:"li"},"just")),(0,s.kt)("li",{parentName:"ul"},"bring up descoping a variant.")),(0,s.kt)("p",null,"Introduce the matcher"),(0,s.kt)("p",null,"Prematch"))}c.isMDXComponent=!0}}]);