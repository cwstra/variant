(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{173:function(e,r,n){"use strict";n.r(r),n.d(r,"frontMatter",(function(){return o})),n.d(r,"metadata",(function(){return i})),n.d(r,"rightToc",(function(){return u})),n.d(r,"default",(function(){return p}));var t=n(1),a=n(9),c=(n(0),n(179)),o={id:"generic",title:"Generic variants"},i={id:"use/generic",title:"Generic variants",description:"We can use generics to create a more flexible binary tree\r",source:"@site/docs\\use\\generic.md",permalink:"/variant/docs/use/generic",sidebar:"someSidebar",previous:{title:"Recursive variants",permalink:"/variant/docs/use/recursive"},next:{title:"React + Redux \u269b\ufe0f",permalink:"/variant/docs/use/redux"}},u=[],l={rightToc:u};function p(e){var r=e.components,n=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(t.a)({},l,n,{components:r,mdxType:"MDXLayout"}),Object(c.b)("p",null,"We can use generics to create a more flexible binary tree"),Object(c.b)("pre",null,Object(c.b)("code",Object(t.a)({parentName:"pre"},{className:"language-typescript"}),"type Tree<T> =\n    | Variant<'Leaf', {payload: T}>\n    | Variant<'Branch', {left: Tree<T>, right: Tree<T>}>\n;\n\nconst Tree = genericVariant(({A}) => ({\n    Branch: fields<{left: Tree<typeof A>, right: Tree<typeof A>}>(),\n    Leaf: payload(A),\n}));\n\nconst leaf = Tree.Leaf(5);\n\nconst numTree = Tree.Branch({\n    left: Tree.Leaf(4),\n    right: Tree.Leaf(66),\n});\n\nconst strTree = Tree.Branch({\n    left: Tree.Leaf('hello'),\n    right: Tree.Branch({\n        left: Tree.Leaf('world'),\n        right: Tree.Leaf('people'),\n    }),\n})\n")))}p.isMDXComponent=!0},179:function(e,r,n){"use strict";n.d(r,"a",(function(){return f})),n.d(r,"b",(function(){return d}));var t=n(0),a=n.n(t);function c(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){c(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function u(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},c=Object.keys(e);for(t=0;t<c.length;t++)n=c[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(t=0;t<c.length;t++)n=c[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),p=function(e){var r=a.a.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):i({},r,{},e)),n},f=function(e){var r=p(e.components);return a.a.createElement(l.Provider,{value:r},e.children)},s={inlineCode:"code",wrapper:function(e){var r=e.children;return a.a.createElement(a.a.Fragment,{},r)}},b=Object(t.forwardRef)((function(e,r){var n=e.components,t=e.mdxType,c=e.originalType,o=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),f=p(n),b=t,d=f["".concat(o,".").concat(b)]||f[b]||s[b]||c;return n?a.a.createElement(d,i({ref:r},l,{components:n})):a.a.createElement(d,i({ref:r},l))}));function d(e,r){var n=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var c=n.length,o=new Array(c);o[0]=b;var i={};for(var u in r)hasOwnProperty.call(r,u)&&(i[u]=r[u]);i.originalType=e,i.mdxType="string"==typeof e?e:t,o[1]=i;for(var l=2;l<c;l++)o[l]=n[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);